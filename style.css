/*========= GERAL ==============================================*/
* {
  box-sizing: border-box; /* faz com que a caixa seja contada a partir da borda e não do conteúdo */
  margin: 0;
  padding: 0;
}

:root {
  --hue: 170;
  --primary-color: hsl(var(--hue), 100%, 26%);
  --headline: hsl(210, 11%, 15%);
  --paragraph: hsl(210, 9%, 31%);
  --brand-beige: hsl(39, 100%, 97%);
  --brand-light: hsl(calc(var(--hue) - 22), 23%, 89%);
  --brand-light-2: hsl(calc(var(--hue) + 10), 14%, 97%);
  --brand-dark: hsl(var(--hue), 100%, 14%);
  --bg-light: hsl(180, 14%, 97%);

  font-size: 62.5%;
  /* assim 1 rem = 10 px; 
  como chegou nisso: 
  100% - 16px
  x -    10px
  x = 62.5% 
  Isso facilita colocar os tamanhos de px em rem, por exemplo, 16 px = 1.6rem */

  --nav-height: 7.2rem;
}

html {
  scroll-behavior: smooth;
}

html,
body {
  width: 100%;
  height: 100%;
}

body {
  font-family: 'DM Sans';
  font-size: 1.6rem;

  text-align: center;

  overflow: overlay; /*a barra de rolagem sobrepõe a pagina nao interfirindo na posição dos elementos*/

  background-color: var(--bg-light);
}

.wrapper {
  width: min(
    50rem,
    100%
  ); /*dessa forma é sempre escolhido o menor tamanho, se a tela for MENOR que 50 rem, será definido o 100%, que é o tamanho da tela, se for maior que 50rem, será 50 rem*/
  margin-inline: auto; /* preencher automaticamente os espaços laterais */
  padding-inline: 2.4rem; /* espaços internos*/
}

ul {
  list-style: none; /*tirar as propriedades de lista, como pontos de topico no inicio*/
}

img {
  max-width: 100%; /* a imagem precisa respeitar o tamanho da caixa em que está inserida */
}

section {
  padding-block: 10rem;
}

section header h4 {
  font-size: 1.4rem;
  font-weight: 700;
  line-height: 150%;
  letter-spacing: 0.08em;
  text-transform: uppercase;

  color: var(--primary-color);

  margin-bottom: 1.6rem; /* margin bottom é o espaçamento embaixo */
}

section header h2 {
  font-size: 3rem;
  line-height: 3.9rem;

  color: var(--headline);
}

section header h1 {
  font-size: 3.4rem;
  color: var(--headline);
  line-height: 130%; /* é o tamanho entre as linhas */

  margin-bottom: 2.4rem;
}

section .content p {
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 150%;

  color: var(--paragraph);
}

.button {
  background: var(--primary-color);

  border: none;
  border-radius: 4rem;

  margin-bottom: 6rem;

  padding: 1.6rem 3.2rem;
  width: fit-content; /*largura de adapta ao conteudo*/

  color: white;
  font-size: 1.4rem;
  font-weight: 700; /* deixa a letra mais grossa */
  text-transform: uppercase;

  display: flex;
  align-items: center; /* alinhar no centro com relação a altura */
  justify-content: center; /* alinhar no centro com relação a largura */
  gap: 1.6rem; /* espaço entre os elementos, no caso o simbolo do wpp e o texto */

  text-decoration: none;

  transition: background 200ms;
}

.button:hover {
  background-color: var(--brand-dark);
}

.social-links {
  display: flex; /*icons ficarão um ao lado do outro*/
  align-items: center; /*centro com relação a altura*/
  justify-content: center; /*centro com relação a largura*/
  gap: 3.2rem; /*espaçamento entre eles*/
}

/*========= CUSTOM COLORS =======================================*/
#services .card circle {
  fill: var(--brand-light);
}

#navigation .logo path[fill*="#00856F"], /* aqui está selecionando apenas a parte do logo que está aplicado o fill com a cor #00856F, para não mudar o inicio do logo */
#backToTopButton circle {
  fill: var(--primary-color);
}

body.menu-expanded #navigation .logo path,
#navigation.scroll .logo path {
  fill: white;
} /* aplicando o primary color no navigation acima, as letras somem quando é dado o scroll, portanto, quando estiver com o scroll ativado as letras precisam ficar brancas*/

#navigation button.open-menu path[stroke*='#00856F'],
#contact li path {
  stroke: var(--primary-color);
}

#navigation.scroll button.open-menu path[stroke*='#00856F'] {
  stroke: white;
}

/*========= NAVIGATION ==========================================*/

nav {
  display: flex;

  height: var(--nav-height);

  position: fixed; /* deixar fixo quando descer a tela, porém com isso perde as propriedaes, portanto será feito os processos abaixo:*/
  top: 0;
  width: 100vw;

  z-index: 100;
}

nav .wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

nav.scroll {
  background: var(--primary-color);
}

nav button {
  background: none; /*sem fundo*/
  border: none; /*sem borda*/
  cursor: pointer; /*a maozinha qnd está em cima do botão*/
}

nav .menu,
nav .close-menu {
  position: fixed;
}

/*========= MENU-EXPANDED ========================================*/
body.menu-expanded {
  /*qnd tiver o menu expandido, não terá as "sobras" da tela, tirando o scroll*/
  overflow: hidden;
}

body.menu-expanded > :not(nav) {
  /*quer dizer: TODOS (>) EXCETO (:not) NAV, serão display none, ou seja, não aparecerão quando o menu estiver expandido*/
  display: none;
}

.menu,
.close-menu,
body.menu-expanded .open-menu {
  opacity: 0; /*deixa o menu e o botao de fechar o menu "transparentes"*/
  visibility: hidden; /*esconde o menu e o botão de fechar tornando impossivel clicar nos botões do menu*/
}

body.menu-expanded .menu,
body.menu-expanded .close-menu {
  opacity: 1;
  visibility: visible;
}

.menu {
  transform: translateY(100%);
}

body.menu-expanded .menu {
  /*qnd o body tiver a classe menu-expanded ele irá procurar dentro dele o menu*/
  top: 0;
  left: 0;
  background: var(--primary-color);

  width: 100vw;
  height: 100vh;

  padding-top: var(--nav-height);

  transition: transform 300ms;
  transform: translateY(0);
}

body.menu-expanded nav {
  position: relative; /*o menu está dentro do nav, que tb está com o position fixed, por isso tem o espaço entre o menu e a esquerda da tela, com o relative, basicamente é retirado esse fixedm mas somente quando estiver expanded*/
}

.menu ul:nth-child(1) {
  /*aplicando ao primeiro ul, se nao será aplicado nos icons tb*/
  /*ul é como se fosse a caixa que contém os outros links como Serviços, Sobre, etc*/
  display: flex; /*esses elementos precisam estar flexiveis*/
  flex-direction: column; /*porem na direção vertical, de coluna, para ficar um abaixo do outro*/
  gap: 4.8rem; /*espaço entre eles*/

  margin-top: 6rem; /*afastados do topo em 6rem*/

  font-weight: 700;
  font-size: 2.4rem;
  line-height: 3.1rem;
}

.menu ul li a {
  color: white;
  text-decoration: none;
}

.menu .button {
  background: white;
  border-radius: 4rem;
  font-weight: 700; /*fonte grossa, ou seja bold*/
  font-size: 1.8rem;
  line-height: 2.3rem;
  text-transform: uppercase; /*tudo em caixa alta*/
  text-decoration: none; /*tirar o sublinhado que estava por conta do link*/

  color: var(--primary-color);

  display: inline-block; /*desbloqueia funções como margin top, espaçamento, etc, e ja da uma quebra entre os elementos, não ficam sobrepostos*/
  padding: 16px 32px;

  margin-top: 4.8rem;
  margin-bottom: 8rem;
}

.menu .button:hover {
  background-color: var(--primary-color);
  color: white;

  filter: brightness(1.3);
}

body.menu-expanded .logo,
body.menu-expanded nav button {
  position: relative; /*posicionamento relativo, tirou do fixo*/
  z-index: 100; /*o z index é como se fosse o plano z, ele está trazendo para frente*/
}

body.menu-expanded .logo path {
  fill: white;
}

body.menu-expanded button path {
  stroke: white;
}

/*========= HOME ==============================================*/
#home {
  padding-block: 0;
  padding-top: calc(4.1rem + var(--nav-height));
}

#home::before {
  /*como se estivesse criando outra caixa, um html dentro do css*/
  content: '';
  width: 100%; /*para ocupar toda a view port, toda a tela*/
  height: calc(76% + var(--nav-height));
  background-color: var(--brand-light);
  display: block;

  position: absolute; /*absolute serve para liberar as posições abaixo*/
  top: 0; /*faz com que essa caixa encoste no topo da pagina e a esquerda dela*/
  left: 0;
  z-index: -1; /*joga para tras do conteúdo*/
}

#home .button {
  margin-inline: auto;
}

#home p {
  font-size: 1.8rem;
  line-height: 150%;
  font-weight: 400;
  color: var(--paragraph);

  margin-bottom: 3.2rem;
}

#home img {
  width: 26.4rem;
  display: block;
  margin-inline: auto;
}

#home .stats {
  width: 100%;
  /* utilizando o 100% ele irá preencher 100% da caixa que tiver disponivel */
  /* height: 47rem; ao invés de definir a altura dessa caixa, será definida a margem de cima e de baixo, para que tenha o espaçamento correto */
  padding-block: 4rem;
  margin-inline: auto;

  background: var(--brand-beige);
  border: 1px solid var(--brand-light);
  border-radius: 0.6rem;

  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 6rem;
}

#home .stat h3 {
  font-size: 4.8rem;
  color: var(--headline);
  line-height: 130%;

  margin-bottom: 0.4rem;
}

#home .stat p {
  margin: 0; /* aqui foi definida margem 0 pq anteriormente foi definida uma margem de 3.2 para p, mas para o p que está acima do botão, esse p tem uma margem diferente, por isso aqui foi definido como 0 e dentro de "stats" foi colocado um "gap"de 6 rem, que é o espaço entre cada elemento. */
  color: var(--primary-color);
  /* font-size: 1.6rem; não tem necessidade de definir o tamanho da fonte pq ja foi definido em "body", com isso é aplicado para todos os "filhos", apenas se fosse um tamanho diferente desse*/
  line-height: 150%;
}

/*========= SERVICES =========================================*/
/* # referencia um ID do HTML */
#services header h2 {
  margin-bottom: 6rem;
}

#services .cards {
  display: flex;
  flex-direction: column;
  gap: 3.2rem;
}

#services .card {
  padding: 2.4rem;
  text-align: left;

  background: white;

  border: 0.1rem solid var(--brand-light);
  border-radius: 0.6rem;
}

#services .card h3 {
  margin-block: 1.6rem; /*margin-block é a margem de cima e de baixo*/
}

/*========= ABOUT =========================================*/
#about {
  text-align: left;
  background-color: var(--brand-beige);
}

#about header h2 {
  margin-bottom: 2.4rem;
}

#about .content p {
  margin-top: 2.4rem;
  margin-bottom: 6rem;
}

/*========= CONTACT =========================================*/
#contact {
  text-align: left;
}

#contact header {
  margin-bottom: 3.2rem;
}

#contact ul {
  display: flex;
  flex-direction: column;
  gap: 1.6rem;

  margin-bottom: 3.2rem;
}

#contact ul li {
  display: flex;
  align-items: center;
  gap: 0.8rem;
}
/*========= FOOTER =========================================*/
footer {
  background-color: var(--primary-color);
  padding-block: 6rem;

  text-align: left;

  color: white;
}

footer .logo {
  display: inline-block;
  margin-bottom: 2.4rem;
}

footer .logo svg {
  width: 23.6rem;
  height: 3.1rem;
}

footer .logo path {
  fill: white;
}

footer p {
  color: var(--brand-beige);
  line-height: 2;

  margin-bottom: 3.2rem;
}

footer .social-links {
  justify-content: flex-start; /*alinhado ao inicio*/
}
/*========= BACK TO TOP =========================================*/
#backToTopButton {
  position: fixed;
  bottom: 1rem;
  right: 2.5rem;

  opacity: 0;
  visibility: hidden;

  transform: translateY(100%);
  transition: 200ms;
}

#backToTopButton.show {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

/*========= RESPONSIVO =========================================*/

/* Abaixo quer dizer: quando a tela tiver no mínimo 1024px, que seria a tela minima de desktop, as propriedades abaixo deverão ser aplicadas */

/* Para que o @media abaixo funcione, é preciso que tenha no html a seguinte função: <meta name="viewport" content="width=device-width, initial-scale=1.0" /> */

@media (min-width: 1024px) {
  /*========= GERAL =========================================*/

  body {
    overflow: auto;
  }

  /* no figma, a caixa contém no máximo 1120px de tamanho, por isso min 112rem */
  .wrapper {
    width: min(112rem, 100%);
    display: grid;
  }

  /* a coluna a estará na área A dessa grid */
  .col-a {
    grid-area: A;
  }

  /* a coluna b estará na área B dessa grid */
  .col-b {
    grid-area: B;
  }

  section {
    padding-block: 16rem;
  }

  section header h2 {
    font-size: 4rem;
    line-height: 5.2rem;
  }

  /*========= NAVIGATION =========================================*/

  /* reset */
  /* a função abaixo quer dizer que: todos os elementos dentro do wrapper, dentro do navigation, estão sendo resetados */

  nav#navigation .wrapper * {
    margin: 0;
    padding: 0;
    visibility: initial;
    display: initial;
    opacity: initial;
    flex-direction: initial;
    position: initial;
    font-size: initial;
    font-weight: initial;
    transform: initial;
    color: initial;
    background-color: initial;
    filter: initial;
  }

  nav#navigation .close-menu,
  nav#navigation .open-menu,
  nav#navigation .social-links {
    display: none;
  }

  /* definindo os espaços entre o cabeçalho (logo, menu e botão)*/
  nav#navigation .menu {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 60%;
  }

  /* espaçamento entre cada item do menu (nth child 1 porque o 2 são os icones das redes sociais*/
  nav#navigation .menu ul:nth-child(1) {
    display: flex;
    gap: 3.2rem;
  }

  /* formatando a lista do menu */
  nav#navigation .menu ul li a {
    color: var(--primary-color);
    opacity: 0.7;
  }

  /* definindo o botão agende a sua consulta */
  nav#navigation .menu a.button {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem 2.4rem;
    gap: 16px;

    border: 1px solid var(--primary-color);
    border-radius: 4rem;

    color: var(--primary-color);

    font-weight: 700;
    font-size: 1.4 rem;
    line-height: 1.8 rem;
    text-transform: uppercase;
  }

  nav#navigation .menu a.button:hover {
    background-color: var(--primary-color);
    border: none;
    color: white;
  }

  nav#navigation.scroll .menu ul li a {
    color: var(--brand-light-2);
    opacity: 0.6;
  }

  nav#navigation.scroll .menu a.button {
    border-color: white;
    color: white;
  }

  nav#navigation .menu li a {
    transition: opacity 0.4s;
  }

  /* aqui está fazendo com que a palavra fique em destaque quando o mouse está em cima */
  nav#navigation .menu ul li a.active,
  nav#navigation .menu ul li a:hover {
    opacity: 1;
    font-weight: 700;
  }

  /* aqui está adicionando o traço abaixo do item que está com o mouse em cima */
  nav#navigation .menu li a::after {
    content: '';
    width: 0%; /* a largura começa em zero, e muda quando passar o mouse em cima */
    height: 2px;
    background-color: var(--primary-color);

    /* aqui está definindo o tamanho desse traço */
    position: relative;
    bottom: -2rem;
    left: -0.5rem;

    display: block;
    /* definindo o efeito do traço */
    transition: width 0.2s;
  }

  nav#navigation.scroll .menu li a::after {
    background-color: white;
  }

  /* fazer com que o traço apareça somente quando o mouse estiver em cima (apenas com as formatações anteriores estava aparecendo abaixo de todos os itens do menu) */
  /* como se le o que está definido abaixo: nav quando estiver o id navigation procura todo "li" que existe dentro da classe do menu (todo "a" que existe dentro do "li") e quando esse "a" estiver "hover" ou seja, passando o mouse em cima, procura o elemento "after" */

  nav#navigation .menu li a.active::after,
  nav#navigation .menu li a:hover::after {
    padding-inline: 0.8rem;
    width: 100%;
  }

  /* aqui está fazendo com que o botão de agende sua consulta mude quando tiver no modo scroll e passar o mouse por cima */
  nav#navigation.scroll .menu a.button:hover {
    background-color: var(--primary-color);
    filter: brightness(1.3);
    border: none;
  }
  /*========= HOME =========================================*/
  #home::before {
    height: calc(96% - var(--nav-height));
  }

  /* aqui está definindo a altura da imagem para o cabeçalho */
  #home {
    padding-top: var(--nav-height);
  }

  /* aqui está definindo como é essa tabela, ela é formada pelas áreas, A, B e C de acordo como descrito abaixo */
  #home .wrapper {
    grid-template-columns: 60.5rem 1fr; /* 1fr é uma medida flexivel */
    grid-template-areas:
      'A B'
      'C C';
  }

  #home .col-a {
    text-align: left;
    align-self: center;
  }

  /* definindo o tamanho das fontes para desktop */
  #home h1 {
    font-size: 5.2rem;
  }

  #home .content p {
    font-size: 1.8rem;
  }

  /* os stats, que é o quadro abaixo da imagem, ocupará a área C do grid */
  #home .stats {
    grid-area: C;
    /* definindo que esse flex é na direção horizontal para termos um ao lado do outro e não um abaixo do outro */
    flex-direction: row;
    /*eapaçamento acima e abaixo */
    padding: 6rem;
    gap: 0;
  }

  /* isso quer dizer: a stat que anterior a ela tem um stat, ou seja: temos 3 elementos nesse stat: A | B | C, anterior ao A não possui nenhum stat, anterior ao B possui o stat A e anterior ao C possui o stat B, com isso faremos com que apareça a divisória anterior aos stats B e C */
  #home .stats .stat + .stat {
    border-left: 1px solid var(--primary-color);
  }
  /* aqui está definindo que cada caixa dentro da caixa maior deve ter um tamanho igual, ou seja a caixa maior será dividida igualmente para esses espaços */
  #home .stats .stat {
    flex: 1;
  }

  #home .button {
    margin: 0;
  }

  #home img {
    width: 42rem;
  }

  /*========= SERVICES =========================================*/
  #services h2 {
    width: 47rem;
    margin-inline: auto;
  }

  /* aqui está deixando os cards do serviço na direçao horizontal mas respeitando o tamanho da caixa de cada card */
  #services .cards {
    flex-direction: row;
    flex-wrap: wrap;
    gap: 4rem;
  }

  #services .card {
    width: 30%;
    flex-grow: 1; /* pros cards crescerem o suficiente para preencherem os espaços */
  }

  /*========= ABOUT =========================================*/
  #about .wrapper {
    grid-template-columns: 48rem 1fr;
    grid-template-areas: 'B A';
    gap: 6.7rem;
  }

  #about .col-a {
    align-self: center;
  }

  #about .content p {
    margin-bottom: 0;
  }

  /*========= CONTACT =========================================*/

  #contact .wrapper {
    grid-template-columns: 1fr 57.5rem;
    grid-template-areas: 'A B';
  }

  #contact h2 {
    width: 40.4rem;
  }

  /*========= FOOTER =========================================*/
  footer {
    padding-block: 8rem;
  }

  footer .wrapper {
    grid-template-columns: 1fr 1fr;
    grid-template-areas: 'A B';
  }

  footer .col-a {
    align-self: center;
  }
  /* alinhando os icones de redes sociais no final */
  footer .col-b {
    align-self: center;
    justify-self: flex-end;
  }

  footer p {
    margin-bottom: 0;
  }
}
